{
  "name": "edehr-server",
  "scripts": {
    "build": "npm run clean && npm run build:babel && npm run build:resources",
    "build:babel": "mkdir -p build && babel src --out-dir ./build",
    "build:resources": "mkdir -p build/resources && cp src/resources/* build/resources",
    "clean": "rm -rf build",
    "db-clean": "NODE_ENV=development DEBUG='server, error' npx babel-node src/util/db-clean.js",
    "db-clean-nodemon": "NODE_ENV=development DEBUG='server, error' nodemon --ignore 'deleted/*' --exec babel-node src/util/db-clean.js",
    "db-tools": "NODE_ENV=development DEBUG='server, error' npx babel-node src/util/db-tools.js",
    "db-tools-nodemon": "NODE_ENV=development DEBUG='server, error'  nodemon --ignore 'deleted/*' --exec babel-node src/util/db-tools.js",
    "generate-password": "node src/server/generate-password.js",
    "lint": "eslint --fix 'src/**/*.js'",
    "scale-test": "node test/scale-testing.js",
    "start": "NODE_ENV=development DEBUG='server, error' nodemon -r dotenv/config --exec babel-node src/index.js",
    "start:auth": "NODE_ENV=development DEBUG_COLORS=no DEBUG='auth, trace, server, error' nodemon -r dotenv/config --exec babel-node src/index.js",
    "start:auth:lti": "NODE_ENV=development DEBUG_COLORS=no DEBUG='auth, lti, trace, server, error' nodemon -r dotenv/config --exec babel-node src/index.js",
    "start:lti": "NODE_ENV=development DEBUG_COLORS=no DEBUG='lti, server, error' nodemon -r dotenv/config --exec babel-node src/index.js",
    "start:all": "NODE_ENV=development DEBUG_COLORS=no DEBUG='trace, auth, lti, server, error, details' nodemon -r dotenv/config --exec babel-node src/index.js",
    "start:prod": "NODE_ENV=production DEBUG='server, error' node build/index.js",
    "start:prod:auth": "NODE_ENV=production DEBUG='auth, server, error' node build/index.js",
    "start:prod:lti": "NODE_ENV=production DEBUG='lti, server, error' node build/index.js",
    "test": "npm run build && DEBUG='error' NODE_ENV=test node_modules/.bin/mocha dotenv/config --recursive --sort --bail --exit 'build/**/*.spec.js'",
    "test:all": "npm run build && NODE_ENV=test node_modules/.bin/mocha --recursive --sort 'build/**/*.spec.js'",
    "test:act": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/activity/activity.server.spec.js",
    "test:act:con": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/activity/activityController.server.spec.js",
    "test:adc": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/activity-data/activityDataController.server.spec.js",
    "test:base": "NODE_ENV=test DEBUG='error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/common/baseController.server.spec.js",
    "test:con": "NODE_ENV=test DEBUG='error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/consumer/consumer.server.spec.js",
    "test:cov": "npm run build && NODE_ENV=test nyc -x '**/*.spec.js' node_modules/.bin/mocha --recursive --sort --bail --exit 'build/**/*.spec.js'",
    "test:ehr": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/ehr-definitions/ehr-models.spec.js",
    "test:dbseed": "NODE_ENV=test DEBUG='server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/db/dbSeeder.server.spec.js",
    "test:ehr:e": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/ehr-definitions/ehr-models-elements.spec.js",
    "test:ehr:model": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/ehr-definitions/EhrDataModel.spec.js",
    "test:ehr:util": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/ehr-definitions/ehr-def-utils.spec.js",
    "test:lti": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/lti/lti.server.spec.js",
    "test:one": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/metric/monitor.spec.js",
    "test:one:demo": "NODE_ENV=test DEBUG='server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/demo/demo.server.spec.js",
    "test:seedcon": "NODE_ENV=test DEBUG='testing, server, error' node_modules/.bin/mocha --require @babel/register --require @babel/runtime/regenerator --require @babel/polyfill src/mcr/seed/seedDataController.server.spec.js",
    "test:server": "npm run build &&  NODE_ENV=test node_modules/.bin/mocha --recursive --sort --bail  'build/**/*.server.spec.js'",
    "test:system,comment": "test:system is used in the Git workflow. Not :server because that requires a database",
    "test:system": "npm run build && NODE_ENV=test node_modules/.bin/mocha  dotenv/config --recursive --sort --bail 'build/**/*.system.spec.js'",
    "test:verbose": "npm run build && NODE_ENV=test DEBUG='server, error' node_modules/.bin/mocha dotenv/config --recursive --sort --bail 'build/**/*.spec.js'",
    "test:verbose.comment": "make test.versbose the same as test but add in DEBUG"
  },
  "comments": {},
  "dependencies": {
    "@babel/runtime": "^7.16.3",
    "@sentry/integrations": "^7.13.0",
    "@sentry/node": "^7.12.1",
    "@sentry/tracing": "^7.12.1",
    "axios": "^0.24.0",
    "body-parser": "^1.19.0",
    "cors": "^2.8.4",
    "debug": "~4.3.3",
    "deepmerge": "^4.2.2",
    "dotenv": "^16.0.0",
    "ejs": "^3.1.6",
    "express": "^4.17.1",
    "express-rate-limit": "^5.5.1",
    "express-session": "^1.17.2",
    "filenamify": "^5.0.2",
    "filesize": "^8.0.6",
    "helmet": "^4.6.0",
    "ims-lti": "git+https://github.com/bryan-gilbert/ims-lti.git",
    "jsonwebtoken": "^9.0.0",
    "moment": "^2.29.4",
    "mongoose": "^5.13.15",
    "mongoose-unique-validator": "^2.0.3",
    "multer": "^1.4.4",
    "nanoid": "^3.1.31",
    "os-utils": "^0.0.14",
    "passport": "^0.6.0",
    "passport-custom": "^1.1.1",
    "pluralize": "^8.0.0",
    "pug": "^3.0.2",
    "qs": "^6.10.2",
    "response-time": "^2.3.2",
    "session-file-store": "^1.5.0",
    "sinon": "^12.0.1",
    "ua-parser-js": "^1.0.33",
    "uuid": "^8.3.2",
    "winston": "^3.8.2",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.16.0",
    "@babel/core": "^7.16.0",
    "@babel/node": "^7.16.0",
    "@babel/plugin-transform-runtime": "^7.16.8",
    "@babel/polyfill": "^7.12.1",
    "@babel/preset-env": "^7.16.4",
    "@babel/register": "^7.16.0",
    "camelcase": "^6.2.1",
    "chai": "^4.3.4",
    "coveralls": "^3.1.0",
    "eslint": "^8.4.1",
    "mocha": "^9.1.3",
    "nodemon": "^2.0.20",
    "nyc": "^15.1.0",
    "should": "^13.2.3",
    "supertest": "^6.1.6"
  }
}
